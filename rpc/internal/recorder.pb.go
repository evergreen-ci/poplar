// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: recorder.proto

package internal

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventSendTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Time *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *EventSendTime) Reset() {
	*x = EventSendTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recorder_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSendTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSendTime) ProtoMessage() {}

func (x *EventSendTime) ProtoReflect() protoreflect.Message {
	mi := &file_recorder_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSendTime.ProtoReflect.Descriptor instead.
func (*EventSendTime) Descriptor() ([]byte, []int) {
	return file_recorder_proto_rawDescGZIP(), []int{0}
}

func (x *EventSendTime) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventSendTime) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type EventSendInt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value int64  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EventSendInt) Reset() {
	*x = EventSendInt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recorder_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSendInt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSendInt) ProtoMessage() {}

func (x *EventSendInt) ProtoReflect() protoreflect.Message {
	mi := &file_recorder_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSendInt.ProtoReflect.Descriptor instead.
func (*EventSendInt) Descriptor() ([]byte, []int) {
	return file_recorder_proto_rawDescGZIP(), []int{1}
}

func (x *EventSendInt) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventSendInt) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type EventSendBool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value bool   `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EventSendBool) Reset() {
	*x = EventSendBool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recorder_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSendBool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSendBool) ProtoMessage() {}

func (x *EventSendBool) ProtoReflect() protoreflect.Message {
	mi := &file_recorder_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSendBool.ProtoReflect.Descriptor instead.
func (*EventSendBool) Descriptor() ([]byte, []int) {
	return file_recorder_proto_rawDescGZIP(), []int{2}
}

func (x *EventSendBool) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventSendBool) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type EventSendDuration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Duration *durationpb.Duration `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *EventSendDuration) Reset() {
	*x = EventSendDuration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recorder_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSendDuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSendDuration) ProtoMessage() {}

func (x *EventSendDuration) ProtoReflect() protoreflect.Message {
	mi := &file_recorder_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSendDuration.ProtoReflect.Descriptor instead.
func (*EventSendDuration) Descriptor() ([]byte, []int) {
	return file_recorder_proto_rawDescGZIP(), []int{3}
}

func (x *EventSendDuration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventSendDuration) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

var File_recorder_proto protoreflect.FileDescriptor

var file_recorder_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x06, 0x70, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x1a, 0x0c, 0x70, 0x6f, 0x70, 0x6c, 0x61, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x53, 0x0a, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x38, 0x0a, 0x0c,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x6e, 0x64, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x5e, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x32, 0xd8, 0x07, 0x0a, 0x15, 0x50, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x0e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x15, 0x2e,
	0x70, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x16, 0x2e, 0x70, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x2e, 0x50, 0x6f,
	0x70, 0x6c, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0d,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x10, 0x2e,
	0x70, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x2e, 0x50, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x49, 0x44, 0x1a,
	0x16, 0x2e, 0x70, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x2e, 0x50, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x42, 0x65, 0x67, 0x69, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x2e, 0x70, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x2e, 0x50,
	0x6f, 0x70, 0x6c, 0x61, 0x72, 0x49, 0x44, 0x1a, 0x16, 0x2e, 0x70, 0x6f, 0x70, 0x6c, 0x61, 0x72,
	0x2e, 0x50, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x36, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x2e,
	0x70, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x2e, 0x50, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x49, 0x44, 0x1a,
	0x16, 0x2e, 0x70, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x2e, 0x50, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x45, 0x6e, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x16,
	0x2e, 0x70, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x2e, 0x50, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x53, 0x65, 0x74, 0x49, 0x44, 0x12,
	0x14, 0x2e, 0x70, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x6e, 0x64, 0x49, 0x6e, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x2e, 0x50,
	0x6f, 0x70, 0x6c, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a,
	0x07, 0x53, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x15, 0x2e, 0x70, 0x6f, 0x70, 0x6c, 0x61,
	0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x1a,
	0x16, 0x2e, 0x70, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x2e, 0x50, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x70, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x16, 0x2e, 0x70, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x2e, 0x50, 0x6f, 0x70, 0x6c, 0x61,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x53, 0x65, 0x74,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e,
	0x70, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x64,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x16, 0x2e, 0x70, 0x6f, 0x70, 0x6c, 0x61,
	0x72, 0x2e, 0x50, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x38, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x70,
	0x6f, 0x70, 0x6c, 0x61, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x49,
	0x6e, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x2e, 0x50, 0x6f, 0x70, 0x6c,
	0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x53, 0x65,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x14, 0x2e, 0x70, 0x6f, 0x70, 0x6c, 0x61,
	0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x74, 0x1a, 0x16,
	0x2e, 0x70, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x2e, 0x50, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x12, 0x15, 0x2e, 0x70, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x6f, 0x6f, 0x6c, 0x1a, 0x16, 0x2e, 0x70, 0x6f, 0x70,
	0x6c, 0x61, 0x72, 0x2e, 0x50, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x49, 0x6e, 0x63, 0x4f, 0x70, 0x73, 0x12, 0x14, 0x2e, 0x70,
	0x6f, 0x70, 0x6c, 0x61, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x49,
	0x6e, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x2e, 0x50, 0x6f, 0x70, 0x6c,
	0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x49, 0x6e,
	0x63, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x2e, 0x70, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x6f,
	0x70, 0x6c, 0x61, 0x72, 0x2e, 0x50, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x49, 0x6e, 0x63, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x14, 0x2e, 0x70, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x6e, 0x64, 0x49, 0x6e, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x2e, 0x50,
	0x6f, 0x70, 0x6c, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a,
	0x0d, 0x49, 0x6e, 0x63, 0x49, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14,
	0x2e, 0x70, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e,
	0x64, 0x49, 0x6e, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x2e, 0x50, 0x6f,
	0x70, 0x6c, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0e, 0x5a, 0x0c,
	0x72, 0x70, 0x63, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_recorder_proto_rawDescOnce sync.Once
	file_recorder_proto_rawDescData = file_recorder_proto_rawDesc
)

func file_recorder_proto_rawDescGZIP() []byte {
	file_recorder_proto_rawDescOnce.Do(func() {
		file_recorder_proto_rawDescData = protoimpl.X.CompressGZIP(file_recorder_proto_rawDescData)
	})
	return file_recorder_proto_rawDescData
}

var file_recorder_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_recorder_proto_goTypes = []interface{}{
	(*EventSendTime)(nil),         // 0: poplar.EventSendTime
	(*EventSendInt)(nil),          // 1: poplar.EventSendInt
	(*EventSendBool)(nil),         // 2: poplar.EventSendBool
	(*EventSendDuration)(nil),     // 3: poplar.EventSendDuration
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),   // 5: google.protobuf.Duration
	(*CreateOptions)(nil),         // 6: poplar.CreateOptions
	(*PoplarID)(nil),              // 7: poplar.PoplarID
	(*PoplarResponse)(nil),        // 8: poplar.PoplarResponse
}
var file_recorder_proto_depIdxs = []int32{
	4,  // 0: poplar.EventSendTime.time:type_name -> google.protobuf.Timestamp
	5,  // 1: poplar.EventSendDuration.duration:type_name -> google.protobuf.Duration
	6,  // 2: poplar.PoplarMetricsRecorder.CreateRecorder:input_type -> poplar.CreateOptions
	7,  // 3: poplar.PoplarMetricsRecorder.CloseRecorder:input_type -> poplar.PoplarID
	7,  // 4: poplar.PoplarMetricsRecorder.BeginEvent:input_type -> poplar.PoplarID
	7,  // 5: poplar.PoplarMetricsRecorder.ResetEvent:input_type -> poplar.PoplarID
	3,  // 6: poplar.PoplarMetricsRecorder.EndEvent:input_type -> poplar.EventSendDuration
	1,  // 7: poplar.PoplarMetricsRecorder.SetID:input_type -> poplar.EventSendInt
	0,  // 8: poplar.PoplarMetricsRecorder.SetTime:input_type -> poplar.EventSendTime
	3,  // 9: poplar.PoplarMetricsRecorder.SetDuration:input_type -> poplar.EventSendDuration
	3,  // 10: poplar.PoplarMetricsRecorder.SetTotalDuration:input_type -> poplar.EventSendDuration
	1,  // 11: poplar.PoplarMetricsRecorder.SetState:input_type -> poplar.EventSendInt
	1,  // 12: poplar.PoplarMetricsRecorder.SetWorkers:input_type -> poplar.EventSendInt
	2,  // 13: poplar.PoplarMetricsRecorder.SetFailed:input_type -> poplar.EventSendBool
	1,  // 14: poplar.PoplarMetricsRecorder.IncOps:input_type -> poplar.EventSendInt
	1,  // 15: poplar.PoplarMetricsRecorder.IncSize:input_type -> poplar.EventSendInt
	1,  // 16: poplar.PoplarMetricsRecorder.IncError:input_type -> poplar.EventSendInt
	1,  // 17: poplar.PoplarMetricsRecorder.IncIterations:input_type -> poplar.EventSendInt
	8,  // 18: poplar.PoplarMetricsRecorder.CreateRecorder:output_type -> poplar.PoplarResponse
	8,  // 19: poplar.PoplarMetricsRecorder.CloseRecorder:output_type -> poplar.PoplarResponse
	8,  // 20: poplar.PoplarMetricsRecorder.BeginEvent:output_type -> poplar.PoplarResponse
	8,  // 21: poplar.PoplarMetricsRecorder.ResetEvent:output_type -> poplar.PoplarResponse
	8,  // 22: poplar.PoplarMetricsRecorder.EndEvent:output_type -> poplar.PoplarResponse
	8,  // 23: poplar.PoplarMetricsRecorder.SetID:output_type -> poplar.PoplarResponse
	8,  // 24: poplar.PoplarMetricsRecorder.SetTime:output_type -> poplar.PoplarResponse
	8,  // 25: poplar.PoplarMetricsRecorder.SetDuration:output_type -> poplar.PoplarResponse
	8,  // 26: poplar.PoplarMetricsRecorder.SetTotalDuration:output_type -> poplar.PoplarResponse
	8,  // 27: poplar.PoplarMetricsRecorder.SetState:output_type -> poplar.PoplarResponse
	8,  // 28: poplar.PoplarMetricsRecorder.SetWorkers:output_type -> poplar.PoplarResponse
	8,  // 29: poplar.PoplarMetricsRecorder.SetFailed:output_type -> poplar.PoplarResponse
	8,  // 30: poplar.PoplarMetricsRecorder.IncOps:output_type -> poplar.PoplarResponse
	8,  // 31: poplar.PoplarMetricsRecorder.IncSize:output_type -> poplar.PoplarResponse
	8,  // 32: poplar.PoplarMetricsRecorder.IncError:output_type -> poplar.PoplarResponse
	8,  // 33: poplar.PoplarMetricsRecorder.IncIterations:output_type -> poplar.PoplarResponse
	18, // [18:34] is the sub-list for method output_type
	2,  // [2:18] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_recorder_proto_init() }
func file_recorder_proto_init() {
	if File_recorder_proto != nil {
		return
	}
	file_poplar_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_recorder_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSendTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recorder_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSendInt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recorder_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSendBool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recorder_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSendDuration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_recorder_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_recorder_proto_goTypes,
		DependencyIndexes: file_recorder_proto_depIdxs,
		MessageInfos:      file_recorder_proto_msgTypes,
	}.Build()
	File_recorder_proto = out.File
	file_recorder_proto_rawDesc = nil
	file_recorder_proto_goTypes = nil
	file_recorder_proto_depIdxs = nil
}
